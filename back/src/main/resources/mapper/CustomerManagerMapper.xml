<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.msy.plus.mapper.CustomerManagerMapper">
    <resultMap id="BaseResultMap" type="com.msy.plus.entity.CustomerManager">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="gender" jdbcType="INTEGER" property="gender"/>
        <result column="tel" jdbcType="VARCHAR" property="tel"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="job" jdbcType="INTEGER" property="job"/>
        <result column="source" jdbcType="INTEGER" property="source"/>
        <result column="seller" jdbcType="INTEGER" property="seller"/>
        <result column="inputUser" jdbcType="INTEGER" property="inputuser"/>
        <result column="inputTime" jdbcType="TIMESTAMP" property="inputtime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="positiveTime" jdbcType="TIMESTAMP" property="positivetime"/>
        <result column="clientType" jdbcType="INTEGER" property="clienttype"/>
        <result column="productName" jdbcType="VARCHAR" property="productname"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="attachment" jdbcType="VARCHAR" property="attachment"/>
    </resultMap>
    <select id="listAllWithDictionary" resultType="com.msy.plus.dto.CustomerManagerList">
        select c.id as id,
        c.name as name,
        c.age as age,
        c.status as status,
        c.productname as productname,
        c.remark as remark,
        c.attachment as attachment,
        dd3.title as clienttype,
        gender,
        tel,
        qq,
        dd1.title as job,
        dd2.title as source,
        if(e2.name is not null, e2.name, e.name)
        as inputUser,
        if(e2.id is not null, e2.id, e.id)
        as inputUserId
        from customer_manager c
        left join
        dictionary_details dd1
        on c.job = dd1.id
        left join
        dictionary_details dd2
        on c.source = dd2.id
        LEFT JOIN
        dictionary_details dd3
        ON c.clienttype = dd3.id
        left join
        employee e
        on e.id = c.inputUser
        left join (
        SELECT *
        FROM customer_handover chG
        WHERE chG.`id` IN (SELECT MAX(chT.id)
        FROM customer_handover chT
        GROUP BY customerID)
        ) ch
        on ch.oldSeller = e.id
        and ch.customerID = c.id
        left join
        employee e2
        on e2.id = ch.newSeller
        where (c.name like concat('%',#{keyword},'%') or c.tel like concat('%',#{keyword},'%'))
        <if test="status != null">
            and c.status =#{status}
        </if>
    </select>
    <!--<select id="getDetailById" resultType="com.msy.plus.entity.CustomerManager">-->
        <!--select c.id                                                as id,-->
               <!--c.name                                              as name,-->
               <!--c.gender                                            as gender,-->
               <!--c.tel                                               as tel,-->
               <!--c.qq                                                as qq,-->
               <!--c.job                                               as job,-->
               <!--c.source                                            as source,-->
               <!--c.seller                                            as seller,-->
               <!--if(ch.newSeller is null, c.inputUser, ch.newSeller) as inputUser-->
        <!--from customer_manager as c-->
                 <!--left join (select *-->
                            <!--from (select * from customer_handover order by transTime desc Limit 10000) as chG-->
                            <!--group by customerID) ch on ch.customerID = c.id-->
        <!--where c.id = #{id}-->
    <!--</select>-->
    <select id="getDetailById" resultType="com.msy.plus.entity.CustomerManager">
        select c.id                                                as id,
               c.name                                              as name,
               c.gender                                            as gender,
               c.tel                                               as tel,
               c.qq                                                as qq,
               c.job                                               as job,
               c.source                                            as source,
               c.seller                                            as seller,
               c.clienttype                                        as clienttype,
               c.productname                                       as productname,
               c.remark                                            as remark,
               c.attachment                                        AS attachment,
               if(ch.newSeller is null, c.inputUser, ch.newSeller) as inputUser
        from customer_manager as c
                 LEFT JOIN ( SELECT * FROM customer_handover ch  ORDER BY transTime DESC LIMIT 1) ch ON ch.customerID = c.id
        where c.id = #{id}
    </select>
    <select id="queryAnalysis" resultType="com.msy.plus.entity.Analysis">
        select
        <if test="map.groupType == null or map.groupType == 1 or map.groupType == 0">
            count(cm.inputUser) as count,
            e.name as name
        </if>
        <if test="map.groupType != null and map.groupType > 1">
            count(cm.inputTime) as count,
        </if>
        <if test="map.groupType != null and map.groupType == 2">
            date_format(cm.inputTime,'%Y') as name
        </if>
        <if test="map.groupType != null and map.groupType == 3">
            date_format(cm.inputTime,'%Y-%m') as name
        </if>
        <if test="map.groupType != null and map.groupType == 4">
            date_format(cm.inputTime,'%Y-%m-%d') as name
        </if>
        from customer_manager as cm
        left join employee e on cm.inputUser = e.id
        where e.name like concat('%',#{map.name},'%')
        <if test="map.startTime != null and map.endTime != null">
            and cm.inputTime between #{map.startTime} and #{map.endTime}
        </if>
        <if test="map.groupType == null or map.groupType == 1 or map.groupType == 0">
            group by e.name
        </if>
        <if test="map.groupType != null and map.groupType > 1">
            group by date_format(cm.inputTime,'%Y-%m')
        </if>
    </select>
</mapper>